resources:
  - repo: self
variables:
  - name: 'dockerRegistryServiceConnection'
    value: 'ACR20rock100prod'
  - name: 'imageRepository'
    value: 'musicstore-orders-microservice'
  - name: 'containerRegistry'
    value: 'acr20rock100prod.azurecr.io'
  - name: 'dockerfilePath'
    value: '$(Build.SourcesDirectory)/MusicStore.Microservices.Orders.Api/Dockerfile'
  - name: 'buildId'
    value: '$(Build.BuildId)'
  - name: 'vmImageName'
    value: 'ubuntu-latest'
  - name: 'tag'
    ${{ if eq(variables['build.SourceBranchName'], 'main') }}:
      value: 'prod'
    ${{ if eq(variables['build.SourceBranchName'], 'develop') }}:
      value: 'dev'
trigger:
  branches:
    include:
      - main
      - develop
  paths:
    include:
      - MusicStore.Orders.Api
      - MusicStore.Orders.Business
      - MusicStore.Orders.Data
      - MusicStore.Orders.Events

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              buildContext: '.'
              tags: |
                $(buildId)
                latest-$(tag)